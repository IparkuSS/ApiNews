--TaskOne
--SELECT NameBank
--FROM Banks
--	JOIN Branches on Branches.BankId = Banks.BankId
--	JOIN Cities on Cities.—ityId = Branches.—ityId
--WHERE Cities.Name—ity= 'Minsk'
--TaskOne
--
--TaskTwo
--SELECT Banks.NameBank, Cards.OwnerName, Cards.Balance
--FROM Cards
--	JOIN Banks on Banks.BankId = Cards.BankId
--TaskTwo
--
--TaskThree
--SELECT Accounts.AccountId,Accounts.Surname, Accounts.Balance  - Cards.Balance AS difference ƒŒƒ≈À¿“‹
--FROM Accounts 
--	JOIN Cards on Cards.AccountId = Accounts.AccountId
--WHERE Accounts.Balance != Cards.Balance
--TaskThree
--
--TaskFour
--SELECT SocialStatuses.Name, (SELECT COUNT(Cards.SocialStatusId) ƒŒƒ≈À¿“‹
--							FROM Cards 
--							WHERE SocialStatuses.SocialStatusId = Cards.SocialStatusId ) AS COUNT
--FROM SocialStatuses			
--TaskFour
--
--TaskFive
			
--TaskFive
--





USE [BankingSystem]
GO
/****** Object:  Trigger [dbo].[ADD_BalanceCard]    Script Date: 28.10.2021 2:28:12 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TRIGGER [dbo].[ADD_BalanceCard]
ON [dbo].[Cards]
AFTER  INSERT, UPDATE
AS 
begin
	DECLARE @BalanceAccount FLOAT
	DECLARE @Id int
	DECLARE @BalanceCard float
	DECLARE @BalanceAllCards float

	SELECT @Id =  (Select AccountId FROM deleted)

	SELECT @BalanceAccount  =(
		Select Accounts.Balance 
	FROM Accounts
	WHERE Accounts.AccountId = @Id)
	
	SELECT @BalanceCard = (
	SELECT Balance 
	FROM inserted
	where  AccountId = @Id )

	SELECT @BalanceAllCards = (
	SELECT SUM(Balance) 
	FROM Cards
	where  AccountId = @Id
	)




	IF @BalanceAccount < @BalanceAllCards 
	 BEGIN
        PRINT 'ÔÎÓıÓ'
        ROLLBACK TRANSACTION
    END
    ELSE
        PRINT 'ıÓÓ¯Ó'
END
